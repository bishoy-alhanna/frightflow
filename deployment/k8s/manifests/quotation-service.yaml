---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quotation-service
  namespace: freight-platform
  labels:
    app: quotation-service
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: quotation-service
  template:
    metadata:
      labels:
        app: quotation-service
        version: v1
    spec:
      containers:
      - name: quotation-service
        image: freight-platform/quotation-service:latest
        ports:
        - containerPort: 8101
          name: http
        env:
        # Database configuration
        - name: DATABASE_URL
          value: "postgresql://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: freight-secrets
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: freight-secrets
              key: DATABASE_PASSWORD
        
        # Redis configuration
        - name: REDIS_URL
          value: "redis://$(REDIS_HOST):$(REDIS_PORT)/0"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: REDIS_PORT
        
        # MinIO configuration
        - name: OBJECT_STORE_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: OBJECT_STORE_ENDPOINT
        - name: OBJECT_STORE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: freight-secrets
              key: OBJECT_STORE_ACCESS_KEY
        - name: OBJECT_STORE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: freight-secrets
              key: OBJECT_STORE_SECRET_KEY
        - name: OBJECT_STORE_SECURE
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: OBJECT_STORE_SECURE
        - name: OBJECT_STORE_BUCKET
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: OBJECT_STORE_BUCKET
        
        # Kafka configuration
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: KAFKA_BROKERS
        
        # Service configuration
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: quotation-config
              key: SERVICE_NAME
        - name: SERVICE_VERSION
          valueFrom:
            configMapKeyRef:
              name: quotation-config
              key: SERVICE_VERSION
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: FLASK_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: LOG_LEVEL
        - name: AUTH_ENABLED
          valueFrom:
            configMapKeyRef:
              name: freight-config
              key: AUTH_ENABLED
        
        # Security
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: freight-secrets
              key: SECRET_KEY
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: freight-secrets
              key: JWT_SECRET_KEY
        
        livenessProbe:
          httpGet:
            path: /health
            port: 8101
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8101
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL

---
apiVersion: v1
kind: Service
metadata:
  name: quotation-service
  namespace: freight-platform
  labels:
    app: quotation-service
spec:
  selector:
    app: quotation-service
  ports:
  - port: 8101
    targetPort: 8101
    name: http
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: quotation-service-hpa
  namespace: freight-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: quotation-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: quotation-service-pdb
  namespace: freight-platform
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: quotation-service

